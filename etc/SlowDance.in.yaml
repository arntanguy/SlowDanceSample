---
# If true, the FSM transitions are managed by an external tool
Managed: false
# If true and the FSM is self-managed, transitions should be triggered
StepByStep: true
# Change idle behaviour, if true the state is kept until transition,
# otherwise the FSM holds the last state until transition
IdleKeepState: true # if code Arnaud false
# Where to look for state libraries
StatesLibraries:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@"
# Where to look for state files
StatesFiles:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@/data"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@/data" # If true, state factory will be more verbose VerboseStateFactory: false
# Additional robots to load
robots:
  table:
    module: env/table
    init_pos:
      translation: [0, -1, 0]
  chair:
    module: env/chair
    init_pos:
      translation: [0, 0, 0]
  # panda_default:
  #   module: PandaDefault
  #   init_pos:
  #     translation: [0, 1, 0]
  ## We don't use the hrp4 section here to set the robot initial position
  # Instead it will be computed in InitialPose state
  # For reference, this is how you would set the robot initial pose from YAML
  #hrp4:
    #init_pos:
       #translation: [0, 0, 0.5]

# General constraints, always on
constraints:
- type: contact
- type: kinematics
  damper: [0.1, 0.01, 0.5]
# XXX WARNING
# COMPOUND JOINT CONSTRAINT IS DISABLED WHILE THE ROBOT IS SEATED ON THE CHAIR AS THE MOTORS ARE TURNED OFF AND WE
# ARE CLOSE TO COMPOUND JOINT LIMIT
# RE-ENABLE WHEN THE HIP MOTORS ARE REACTIVATED
# - type: compoundJoint
# Collision constraint
collisions:
- type: collision
  useMinimal: true
- type: collision
  r1: hrp4
  r2: table
  collisions:
    - body1: r_wrist
      body2: table
      iDist: 0.025
      sDist: 0.001
      damping: 0

# Initial set of contacts
contacts: []

# Implement some additional text states
states:
  Both::Dance:
    base: Parallel
    states: [Panda::Dance, HRP4::Dance]
    configs:
      Panda::Dance:
        autoplay: true
        robot: panda_default
      HRP4::Dance:
        autoplay: true
        robot: hrp4

  Both::Demo:
    base: Meta
    transitions:
      - [HRP4::InitialPose, OK, HRP4::InitialPosture, Auto]
      - [HRP4::InitialPosture, OK, Both::Dance, Auto]

  Init::Wait:
    base: Posture

# Transitions map
transitions:
  - [Init::Wait, SingleRobot, RobotTransitionState, Strict]
  - [Init::Wait, MultiRobot, Both::Demo, Strict]
  - [RobotTransitionState, panda_default, PandaDemo, Auto]
  - [RobotTransitionState, hrp4, HRP4::Demo, Auto]

# Initial state
init: Init::Wait
